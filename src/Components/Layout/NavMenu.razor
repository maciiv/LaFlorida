@using System.Security.Claims

<header>
    <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3">
        <div class="container">
            <a class="navbar-brand" asp-area="" asp-page="/Index">La Florida</a>
            <button class="navbar-toggler" type="button" data-toggle="collapse" data-target=".navbar-collapse"
                aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="navbar-collapse collapse d-sm-inline-flex flex-sm-row-reverse">
                <partial name="_LoginPartial" />
                <ul class="navbar-nav mr-auto">
                    <li class="nav-item active">
                        <a class="nav-link text-dark" asp-area=""
                            asp-page="@(User.Identity.IsAuthenticated && !User.IsInRole("Client") ? "/CurrentCycles" : "/Index")"><i
                                class="fas fa-home"></i></a>
                    </li>
                    @if (User.IsInRole("Admin"))
                    {
                        <li class="nav-item dropdown">
                            <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button"
                                data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                Reportes
                            </a>
                            <div class="dropdown-menu" aria-labelledby="navbarDropdown">
                                <a class="dropdown-item" asp-page="/CropReport">Cultivos</a>
                                <a class="dropdown-item" asp-page="/LotReport">Lotes</a>
                            </div>
                        </li>
                        <li class="nav-item">
                        <a class="nav-link text-dark" asp-area="" asp-page="/AdminDashboard">Area del
                            Administrador</a>
                    </li>
                    }
                </ul>
            </div>
        </div>
    </nav>
</header>

@code {
    @code {
        [CascadingParameter]
        public Task<AuthenticationState>? AuthenticationState { get; set; }
        private ClaimsPrincipal? User { get; set; }

        protected override async Task OnInitializedAsync()
        {
            if (AuthenticationState is not null)
            {
                var authState = await AuthenticationState;
                User = authState?.User;
            }
        }
    }
}
