@using LaFlorida.ServicesModels;
@using LaFlorida.Extensions;

@model IList<CycleStatistics>

@if (Model != null && Model.Any())
{
    <div class="row">
        <div class="col-md-12 my-3">
            <h5>Lote @Model.FirstOrDefault()?.LotName</h5>
        </div>
        <div class="col-md-12 my-3">
            <div class="card">
                <div class="card-body">
                    <canvas id="costSales"></canvas>
                </div>
            </div>
        </div>
        <div class="col-md-6 my-3">
            <div class="card">
                <div class="card-body">
                    <canvas id="performance"></canvas>
                </div>
            </div>
        </div>
        <div class="col-md-6 my-3">
            <div class="card">
                <div class="card-body">
                    <canvas id="return"></canvas>
                </div>
            </div>
        </div>
        <div class="col-md-6 my-3">
            <div class="card">
                <div class="card-body">
                    <canvas id="profitLenght"></canvas>
                </div>
            </div>
        </div>
        <div class="col-md-6 my-3">
            <div class="card">
                <div class="card-body">
                    <canvas id="profitSize"></canvas>
                </div>
            </div>
        </div>
    </div>

    <script>
    var dataLabels = @Html.Raw(Model.Select(c => new string ($"{c.CropName} ({c.LotSize} Ha) - {c.CreateDate.ToShortDateString()}")).ToList().GetLabels());
    createCostSalesChart("costSales",
        dataLabels,
        @Html.Raw(Model.Select(c => c.TotalCosts).ToList().GetData()),
        @Html.Raw(Model.Select(c => c.TotalSales).ToList().GetData()),
        @Html.Raw(Model.Select(c => c.Profit).ToList().GetData()));

        createChart("performance", dataLabels, @Html.Raw(Model.Select(c => c.Performace).ToList().GetData()), "bar", "Rendimiento", "Rendimiento");

        createChart("return", dataLabels, @Html.Raw(Model.Select(c => c.Return).ToList().GetData()), "bar", "Retorno", "Retorno %", "rgba(54, 162, 235, 0.2)", "rgba(54, 162, 235, 1)");

        createChart("profitLenght", dataLabels, @Html.Raw(Model.Select(c => c.ProfitByLenght).ToList().GetData()), "bar", "Ganancia por tiempo", "Ganancia", "rgba(255, 206, 86, 0.2)", "rgba(255, 206, 86, 1)");

        createChart("profitSize", dataLabels, @Html.Raw(Model.Select(c => c.ProfitBySize).ToList().GetData()), "bar", "Ganancia por hectarea", "Ganancia", "rgba(255, 159, 64, 0.2)", "rgba(255, 159, 64, 1)");
    </script>
}
else
{
    <div class="row">
        <div class="col-md-12">
            <h4>No hay informacion suficiente para generar el reporte</h4>
        </div>
    </div>
}